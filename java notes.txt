4/12/24
String Handling:

String
StringBuffer
StringBuilder  (JDK 1.5)
StringTokenizer
StringJoiner(JDK 1.8)

-----

public class StringTest{
static public void main(String ..abc){
String str = "KGISL";
System.out.println(str.length());
System.out.println(str.charAt(2));
System.out.println(str.indexOf('I'));
System.out.println(str.lastIndexOf('I'));
System.out.printl(str.replace('o','@'));
System.out.println(str.replaceAll("KGISL", "Engineering college"));//double quotes used.
System.out.println(str.replaceAll("[a-z]","*"));
System.out.println(str.replace("[a-z]","*"));

//javap java.lang.String -- to know how many methods inside a package.  javap = javaprofile

//java is not 100% object oriented because of the below:

//primitive Datatype     Wrapper classes(JDK 1.5)
byte - Byte
short - Short
int - Integer
long - Long
float - Float
double - Double
char - Character
boolean - Boolean

//smalltalk - 100% object oriented.
//Object class is the parent class of java classes that does not have any parent
//Each and every class is a child of Object class
//Reflection Api - using this we can access private members of a class from outside the class  //javap java.lang.reflect.Method
//RegEx
//ReplaceAll method supports regular expression, but replace method does not support regex;

//the complete reference, khalid mughal, kathy sierra (ocjp)
//con , prn - invalid names why?
//reserved words of os:
//operating system is case insensitive
//con=console, prn, nul, aux, com1, com2, com3, com4, com5 , com6, com7, com8, com9, LPT1,LPT2,LPT3,LPT4,LPT5,LPT6,LPT7,LPT8,LPT9/

//to skip generating class files we can use a single command like java test.java 
//not recommended to use $ in class name because compile uses $ sign.. when a class inside a class situation two byte code will be generated and the nested class name will have $.

//learn about garbage collectors.
//6 phases of compilers.
Lexical Analyzer - is a software uses a lex language in c. flex for c++ and jflex for java. :
Buffering - small storage (copy .java code into its own buffer)
Tokenizing - split the code into different chunk.. while tokenizing compiler sees comments sign and removes the code lines so that comments never run.
Syntax Analyzer
Semantic Analyzer
Intermediate code Generation
Code Optimization
Code Generation

//collection frameworks - for data structures/
//java.util.collections
